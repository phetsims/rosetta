// Copyright 2022, University of Colorado Boulder

/**
 * Make the client config file that has values the client-side code needs during the build process, like whether the
 * utility is enabled, where to get website user data, whether the client is running in a dev or production environment,
 * etc. Once this file is made, the client-side code simply imports it.
 *
 * IMPORTANT: Never put anything sensitive in this file or the file it produces such as API keys, etc. This file is
 * tracked in version control, and the file it produces is imported in client-side code.
 *
 * @author Liam Mulhall <liammulh@gmail.com>
 * @author John Blanco (PhET Interactive Simulations)
 */

import fs from 'fs';
import config from '../../src/common/config.js';

// These are the keys whose values we want to extract from the private config file.
// IMPORTANT: Don't put sensitive keys in this array such as API keys, authorization codes, etc.
const CLIENT_CONFIG_VALUES = [
  'IS_ENABLED',
  'WEBSITE_USER_DATA_URL',
  'ENVIRONMENT',
  'LOCAL_USER_ID',
  'VALID_METADATA_DURATION',
  'SIGN_OUT_URL'
];

let clientConfigString = '/* eslint-disable */\n';
clientConfigString += '// Note: This is a build artifact. Do not modify directly.\n';
clientConfigString += '// This file is generated by the make-client-config-file script.\n';
clientConfigString += '// Secure values should NEVER appear in this file.\n';
clientConfigString += 'export default {\n';

const addQuotes = ( key, object ) => {

  // If value is string, we need to add quotes.
  return typeof object[ key ] === 'string' ?
         '\'' + object[ key ] + '\'' :
         object[ key ];
};

// Add the values needed by the client to the file string.
for ( const key of Object.keys( config ) ) {
  if ( CLIENT_CONFIG_VALUES.includes( key ) ) {
    const value = addQuotes( key, config );
    clientConfigString += `  ${key}: ${value},\n`;
  }
}

// Add the ending curly brace.
clientConfigString += '};';

// This script is meant to be run from the root of the rosetta repo, hence this file path.
const pathToClientConfig = './src/common/clientConfig.js';

console.log( 'info: making client config file' );
fs.writeFileSync( pathToClientConfig, clientConfigString );
console.log( 'info: made client config file' );